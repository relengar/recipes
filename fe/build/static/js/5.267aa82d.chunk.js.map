{"version":3,"sources":["components/shoppingList/my_shopping_lists/my-shopping-list.queries.ts","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","components/shoppingList/create_shopping_list/create_shopping_list.query.ts","components/shoppingList/create_shopping_list/CreateShoppingList.tsx","components/recipe/random_recipe/RandomRecipe.tsx"],"names":["GET_MY_SHOPPING_LISTS","gql","easeOut","t","value","min","max","Math","CircularProgress","React","forwardRef","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","createElement","_extends","clsx","root","capitalize","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","name","flip","CREATE_SHOPPING_LIST","processInput","object","Object","fromEntries","entries","filter","CreateShoppingList","recipeId","recipeTitle","ingredients","submitted","user","useQuery","CURRENT_USER","data","userId","currentUser","id","useMutation","refetchQueries","query","variables","createList","onClick","a","parseInt","map","then","catch","err","console","log","RECIPE","RandomRecipe","history","loading","error","refetch","recipes","randomRecipes","image","title","analyzedInstructions","extendedIngredients","key","src","alt","steps","number","step","resp","push"],"mappings":"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","file":"static/js/5.267aa82d.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const GET_MY_SHOPPING_LISTS = gql`\n    query GetUserShoppingLists($userId: String!){\n        getUserShoppingLists(userId: $userId) {\n            id\n            recipeId\n            recipeTitle\n            ingredients {\n                original\n                amount\n                unit\n            }\n        }\n    }\n`","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      indeterminate: classes.indeterminate,\n      static: classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      indeterminate: classes.circleIndeterminate,\n      static: classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { gql } from 'apollo-boost';\n\nexport const CREATE_SHOPPING_LIST = gql`\nmutation CreateShoppingList(\n    $recipeTitle: String!\n    $recipeId: Int!\n    $ingredients: [IngredientInput!]!\n) {\ncreateShoppingList(\n    recipeId: $recipeId,\n    recipeTitle: $recipeTitle,\n    ingredients: $ingredients\n){\n  id,\n}\n}\n`","import React from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { GET_MY_SHOPPING_LISTS } from '../my_shopping_lists/my-shopping-list.queries';\nimport { CREATE_SHOPPING_LIST } from './create_shopping_list.query';\nimport { CURRENT_USER } from '../../navbar/authModule/auth_module_query';\n\ninterface NewShoppingListProps {\n    recipeId: string;\n    recipeTitle: string;\n    ingredients: ShoppingListIngredient[];\n    submitted: Function;\n}\n\ninterface ShoppingListIngredient {\n    id: number;\n    name: string;\n    original: string;\n    originalName: string;\n    amount: number;\n    unit: string;\n}\n\nfunction processInput<T>(object: T): Partial<T> {\n    return Object.fromEntries(Object.entries(object).filter(([key]) => key !== '__typename'));\n}\n\nfunction CreateShoppingList({ recipeId, recipeTitle, ingredients, submitted }: NewShoppingListProps) {\n    const { data: user } = useQuery(CURRENT_USER);\n    const userId = user?.currentUser?.id\n    const [ createList ] = useMutation(CREATE_SHOPPING_LIST, {\n        refetchQueries: [{\n            query: GET_MY_SHOPPING_LISTS,\n            variables: { userId },\n        }]\n    });\n\n\n    return (\n        <>\n            {\n                userId &&\n                <button\n                    onClick={async() => {\n                        return await createList({variables: { recipeTitle, recipeId: parseInt(recipeId, 10), ingredients: ingredients.map(processInput), userId }})\n                            .then((id) => submitted(id))\n                            .catch(err => console.log(err))\n                    }}\n                    className=\"button\"\n                    >\n                    Create shopping list\n                </button>\n            }\n        </>\n    )\n}\n\nexport default CreateShoppingList","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport './RandomRecipe.css'\nimport CreateShoppingList from '../../shoppingList/create_shopping_list/CreateShoppingList';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { CircularProgress } from '@material-ui/core';\nimport { CURRENT_USER } from '../../navbar/authModule/auth_module_query';\n\nconst RECIPE = gql`\n    {\n      randomRecipes {\n        id\n        title\n        image\n        analyzedInstructions {\n          steps {\n            number\n            step\n          }\n        }\n        extendedIngredients {\n            id\n            original\n            amount\n            unit\n        }\n      }\n    }\n`\n\nfunction RandomRecipe({history}: RouteComponentProps) {\n    const { data: user } = useQuery(CURRENT_USER);\n    const { loading, error, data, refetch } = useQuery(RECIPE);\n    const { randomRecipes: recipes } = data ? data : { randomRecipes: null };\n\n    return (\n        <section className=\"section\">\n            <h1 className=\"title has-text-centered\">Random recipe</h1>\n            <div>\n                {loading && <div className=\"container has-text-centered\"><CircularProgress /></div>}\n                {error && <p>Error: {error}</p>}\n                {\n                    recipes\n                    &&\n                    <>\n                        {recipes.map(({id, image, title, analyzedInstructions, extendedIngredients}: any) => {\n                            return (\n                                <div className=\"container has-text-centered\" key={id}>\n                                    <h4 className=\"subtitle\">{title}</h4>\n                                    <img className=\"random-recipe\" src={image} alt={title}></img>\n                                    <ul>{analyzedInstructions[0]?.steps.map(({ number, step }: any) => {\n                                    return <li key={number}><p>{step}</p></li>\n                                    })}</ul>\n                                    {\n                                        user?.currentUser && \n                                        <p>\n                                            <CreateShoppingList\n                                                recipeId={id}\n                                                recipeTitle={title}\n                                                ingredients={extendedIngredients}\n                                                submitted={(resp: any) => history.push(`/shopping-lists/${user?.currentUser.id}`)}\n                                            />\n                                        </p>\n                                    }\n                                </div>\n                            );\n                        })}\n                        <p>\n                            <button className=\"button\" onClick={() => refetch()}>Another</button>\n                        </p>\n                    </>\n                }\n            </div>\n        </section>\n    )\n}\n\n\nexport default RandomRecipe;"],"sourceRoot":""}