{"ast":null,"code":"import _slicedToArray from\"/Users/dude/Documents/stuff/recipes/fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{NavLink,useHistory}from'react-router-dom';import{useQuery,useLazyQuery,useMutation}from'@apollo/react-hooks';import AuthModule from'./authModule/AuthModule';import{AuthType}from'./navbar.model';import{CURRENT_USER,LOGOUT}from'./authModule/auth_module_query';import{MY_FREINDS}from'../friends/friends.query';function NavBar(){var _ref;var _useQuery=useQuery(CURRENT_USER),data=_useQuery.data,loading=_useQuery.loading,client=_useQuery.client;var _useLazyQuery=useLazyQuery(CURRENT_USER),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),loadUser=_useLazyQuery2[0],lazyData=_useLazyQuery2[1].data;var history=useHistory();var _useMutation=useMutation(LOGOUT,{onCompleted:function onCompleted(){client.resetStore();history.push('/');}}),_useMutation2=_slicedToArray(_useMutation,1),logOut=_useMutation2[0];var user=(_ref=data===null||data===void 0?void 0:data.currentUser)!==null&&_ref!==void 0?_ref:lazyData===null||lazyData===void 0?void 0:lazyData.currentUser;var _useQuery2=useQuery(MY_FREINDS),friends=_useQuery2.data;return React.createElement(\"nav\",{className:\"navbar has-background-light\"},React.createElement(\"div\",{className:\"navbar-menu\"},React.createElement(\"div\",{className:\"navbar-start\"},React.createElement(NavLink,{className:\"navbar-item\",to:\"/\"},\"Home\"),React.createElement(NavLink,{className:\"navbar-item\",to:\"/search\"},\"Search\"),user&&React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"navbar-item has-dropdown is-hoverable\"},React.createElement(\"a\",{className:\"navbar-link\"},\"Shopping Lists\"),React.createElement(\"div\",{className:\"navbar-dropdown\"},React.createElement(NavLink,{to:\"/shopping-lists/\".concat(user.id),className:\"navbar-item\"},user.name,\"\\xA0\",React.createElement(\"i\",null,\"(yours)\")),(friends===null||friends===void 0?void 0:friends.myConnections)&&friends.myConnections.map(function(friend){return React.createElement(NavLink,{key:friend.id,to:\"/shopping-lists/\".concat(friend.id),className:\"navbar-item\"},friend.name);}))),React.createElement(NavLink,{className:\"navbar-item\",to:\"/connections\"},\"Connections\")),React.createElement(NavLink,{className:\"navbar-item\",to:\"/random\"},\"Random Recipe\")),React.createElement(\"div\",{className:\"navbar-end\"},React.createElement(\"div\",{className:\"navbar-item\"},loading&&'...loading'),user&&React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"navbar-item\"},user.name),React.createElement(\"div\",{className:\"navbar-item\"},React.createElement(\"button\",{className:\"button\",onClick:function onClick(){return logOut();}},\"Log Out\"))),!loading&&!user&&React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"navbar-item\"},React.createElement(AuthModule,{authType:AuthType.LOGIN,loadUser:loadUser})),React.createElement(\"div\",{className:\"navbar-item\"},React.createElement(AuthModule,{authType:AuthType.SIGNUP,loadUser:loadUser}))))));}export default NavBar;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/navbar/NavBar.tsx"],"names":["React","NavLink","useHistory","useQuery","useLazyQuery","useMutation","AuthModule","AuthType","CURRENT_USER","LOGOUT","MY_FREINDS","NavBar","data","loading","client","loadUser","lazyData","history","onCompleted","resetStore","push","logOut","user","currentUser","friends","id","name","myConnections","map","friend","LOGIN","SIGNUP"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks';\nimport AuthModule from './authModule/AuthModule';\nimport { AuthType } from './navbar.model';\nimport { CURRENT_USER, LOGOUT } from './authModule/auth_module_query';\nimport { MY_FREINDS } from '../friends/friends.query';\n\nfunction NavBar() {\n    const { data, loading, client } = useQuery(CURRENT_USER);\n    const [ loadUser, { data: lazyData }] = useLazyQuery(CURRENT_USER);\n    const history = useHistory()\n    const [ logOut ] = useMutation(LOGOUT, {\n        onCompleted: () => {\n            client.resetStore();\n            history.push('/')\n        },\n    });\n\n    const user = data?.currentUser ?? lazyData?.currentUser;\n    const { data: friends } = useQuery(MY_FREINDS);\n\n    return (\n        <nav className=\"navbar has-background-light\">\n             <div className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <NavLink className=\"navbar-item\" to=\"/\">Home</NavLink>\n                    <NavLink className=\"navbar-item\" to=\"/search\">Search</NavLink>\n                    {\n                        user && \n                        <>\n                            <div className=\"navbar-item has-dropdown is-hoverable\">\n                                <a className=\"navbar-link\">Shopping Lists</a>\n                                <div className=\"navbar-dropdown\">\n                                    <NavLink to={`/shopping-lists/${user.id}`} className=\"navbar-item\">{user.name}&nbsp;<i>(yours)</i></NavLink>\n                                    {\n                                        friends?.myConnections && \n                                        friends.myConnections.map((friend: any) =>\n                                            <NavLink key={friend.id} to={`/shopping-lists/${friend.id}`} className=\"navbar-item\">{friend.name}</NavLink>\n                                        ) \n                                    }\n                                </div>                            \n                            </div>\n                            <NavLink className=\"navbar-item\" to=\"/connections\">Connections</NavLink>\n                        </>\n                    }\n                    <NavLink className=\"navbar-item\" to=\"/random\">Random Recipe</NavLink>\n                </div>\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">{loading && '...loading'}</div>\n                    {\n                        user &&\n                        <>\n                            <div className=\"navbar-item\">{user.name}</div>\n                            <div className=\"navbar-item\"><button className=\"button\" onClick={() => logOut()}>Log Out</button></div>\n                        </>\n                    }\n                    {\n                        !loading && !user &&\n                        <>\n                            <div className=\"navbar-item\"><AuthModule authType={AuthType.LOGIN} loadUser={loadUser} /></div>\n                            <div className=\"navbar-item\"><AuthModule authType={AuthType.SIGNUP} loadUser={loadUser} /></div>\n                        </>\n                    }\n                </div>\n             </div>\n        </nav>\n    );\n}\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}