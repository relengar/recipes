{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/stuff/recipes/fe/src/components/shoppingList/view_shopping_list/my_ingredients/MyIngredients.tsx\";\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core';\nimport { createStyles } from '@material-ui/styles';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_INGREDIENTS } from './my_ingredients.query';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: 200\n  }\n}));\n\nfunction processIngredient(ingredient) {\n  const requiredFields = ['amount', 'original', 'id', 'amountFill', 'unit'];\n  return Object.fromEntries(Object.entries(ingredient).filter(([key]) => requiredFields.some(field => field === key)));\n}\n\nfunction getVariables(amountFill, ingredient, userId, listId) {\n  return {\n    variables: {\n      userId,\n      id: listId,\n      ingredients: [{ ...processIngredient(ingredient),\n        amountFill\n      }]\n    }\n  };\n}\n\nfunction MyIngredients({\n  ingredients,\n  listId,\n  userId\n}) {\n  const classes = useStyles();\n  const [updateIngredients] = useMutation(UPDATE_INGREDIENTS); // const update = debounce(updateIngredients, 300);\n\n  const update = updateIngredients;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, Array.from(ingredients).map(({\n    id,\n    amount,\n    amountFill,\n    unit,\n    original\n  }, i) => React.createElement(\"li\", {\n    className: \"columns\",\n    key: i + new Date().getTime(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, original), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    marks: [{\n      value: 0,\n      label: `0 ${unit}`\n    }, {\n      value: amount,\n      label: `${amount} ${unit}`\n    }],\n    valueLabelDisplay: \"auto\",\n    className: classes.root,\n    min: 0,\n    max: amount,\n    defaultValue: amountFill,\n    onChangeCommitted: (e, v) => update(getVariables(v, ingredients[i], userId, listId)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, amountFill, \" \", unit))));\n}\n\nexport default MyIngredients;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/shoppingList/view_shopping_list/my_ingredients/MyIngredients.tsx"],"names":["React","Slider","makeStyles","createStyles","useMutation","UPDATE_INGREDIENTS","useStyles","theme","root","width","processIngredient","ingredient","requiredFields","Object","fromEntries","entries","filter","key","some","field","getVariables","amountFill","userId","listId","variables","id","ingredients","MyIngredients","classes","updateIngredients","update","Array","from","map","amount","unit","original","i","Date","getTime","value","label","e","v"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport { createStyles } from '@material-ui/styles'\nimport { debounce } from 'lodash'\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_INGREDIENTS } from './my_ingredients.query';\n\ninterface MyIngredientsProps {\n    ingredients: any[];\n    listId: string;\n    userId: string;\n}\n\nconst useStyles = makeStyles((theme?: Theme) =>\n  createStyles({\n    root: {\n      width: 200,\n    },\n  }),\n);\n\nfunction processIngredient(ingredient: any) {\n    const requiredFields = ['amount', 'original', 'id', 'amountFill', 'unit'];\n    return Object.fromEntries(\n        Object.entries(ingredient)\n            .filter(([key]) => requiredFields.some(field => field === key))\n    );\n}\n\nfunction getVariables(amountFill: number, ingredient: any, userId: string, listId: string) {\n    return {\n        variables: {\n            userId,\n            id: listId,\n            ingredients: [{...processIngredient(ingredient), amountFill}],\n        }\n    }\n}\n\nfunction MyIngredients({ ingredients, listId, userId }: MyIngredientsProps) {\n    const classes = useStyles();\n    const [ updateIngredients ] = useMutation(UPDATE_INGREDIENTS);\n    // const update = debounce(updateIngredients, 300);\n    const update = updateIngredients\n\n    return (\n        <ul>\n            {Array.from(ingredients).map(({ id, amount, amountFill, unit, original}: any, i: number) => (\n                <li className=\"columns\" key={i + new Date().getTime()}>\n                    <div className=\"column\">{original}</div>\n                    <div className=\"column\">\n                        <Slider\n                            marks={[{value: 0, label: `0 ${unit}`}, {value: amount, label: `${amount} ${unit}`}]}\n                            valueLabelDisplay=\"auto\"\n                            className={classes.root}\n                            min={0}\n                            max={amount}\n                            defaultValue={amountFill}\n                            onChangeCommitted={(e, v) => update(getVariables(v as number, ingredients[i], userId, listId))}\n                        />\n                    </div>\n                    <div className=\"column\">{amountFill} {unit}</div>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default MyIngredients;"]},"metadata":{},"sourceType":"module"}