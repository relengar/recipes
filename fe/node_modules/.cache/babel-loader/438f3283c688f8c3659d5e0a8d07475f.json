{"ast":null,"code":"import _slicedToArray from \"/Users/dude/Documents/stuff/recipes/fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dude/Documents/stuff/recipes/fe/src/components/shoppingList/view_shopping_list/ViewShoppingList.tsx\";\nimport React from 'react';\nimport { useQuery, useLazyQuery, useSubscription } from '@apollo/react-hooks';\nimport { GET_SHOPPING_LIST, INGREDIENTS_SUBSCRIPTION } from './view_shopping_list.query';\nimport { useParams } from 'react-router-dom';\nimport { GET_RECIPE } from '../../recipe/recipe_view/recipe_view.query';\nimport { flattenSteps } from '../../util/helpers/flattenSteps';\nimport { CircularProgress } from '@material-ui/core';\nimport MyIngredients from './my_ingredients/MyIngredients';\n\nfunction ViewShoppingList() {\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  const _useLazyQuery = useLazyQuery(GET_RECIPE),\n        _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n        getRecipe = _useLazyQuery2[0],\n        _useLazyQuery2$ = _useLazyQuery2[1],\n        recipeData = _useLazyQuery2$.data,\n        loadingRecipe = _useLazyQuery2$.loading;\n\n  const _useQuery = useQuery(GET_SHOPPING_LIST, {\n    variables: {\n      id\n    },\n    onCompleted: ({\n      getShoppingListById: {\n        recipeId\n      }\n    }) => getRecipe({\n      variables: {\n        recipeId\n      }\n    })\n  }),\n        data = _useQuery.data,\n        loading = _useQuery.loading;\n\n  const _useSubscription = useSubscription(INGREDIENTS_SUBSCRIPTION, {\n    variables: {\n      userId: '5e03a6a91841d1fce86f9292'\n    }\n  }),\n        ingredients = _useSubscription.data;\n\n  const shoppingList = data === null || data === void 0 ? void 0 : data.getShoppingListById; // const [ ingredients, setIngredients ] =  React.useState<any>(shoppingList?.ingredients ?? [])\n\n  const recipe = recipeData === null || recipeData === void 0 ? void 0 : recipeData.recipeById;\n  return React.createElement(\"section\", {\n    className: \"section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, loading && React.createElement(\"div\", {\n    className: \"container has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), shoppingList && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"title has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, shoppingList.recipeTitle), React.createElement(\"div\", {\n    className: \"columns is-two-thirds is-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MyIngredients, {\n    userId: '5e03a6a91841d1fce86f9292',\n    ingredients: shoppingList.ingredients,\n    listId: shoppingList.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, loadingRecipe && React.createElement(\"div\", {\n    className: \"container has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), recipe && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"columns is-one-quarter is-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: recipe.image,\n    alt: recipe.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, recipe.analyzedInstructions.reduce(flattenSteps, []).map(({\n    step\n  }, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"box has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, step)))))));\n}\n\nexport default ViewShoppingList;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/shoppingList/view_shopping_list/ViewShoppingList.tsx"],"names":["React","useQuery","useLazyQuery","useSubscription","GET_SHOPPING_LIST","INGREDIENTS_SUBSCRIPTION","useParams","GET_RECIPE","flattenSteps","CircularProgress","MyIngredients","ViewShoppingList","id","getRecipe","recipeData","data","loadingRecipe","loading","variables","onCompleted","getShoppingListById","recipeId","userId","ingredients","shoppingList","recipe","recipeById","recipeTitle","image","title","analyzedInstructions","reduce","map","step","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery, useLazyQuery, useSubscription } from '@apollo/react-hooks';\nimport { GET_SHOPPING_LIST, INGREDIENTS_SUBSCRIPTION } from './view_shopping_list.query';\nimport { useParams } from 'react-router-dom';\nimport { GET_RECIPE } from '../../recipe/recipe_view/recipe_view.query';\nimport { flattenSteps } from '../../util/helpers/flattenSteps';\nimport { CircularProgress } from '@material-ui/core';\nimport MyIngredients from './my_ingredients/MyIngredients';\n\nfunction ViewShoppingList() {\n    const { id } = useParams();\n    const [ getRecipe, { data: recipeData, loading: loadingRecipe } ] = useLazyQuery(GET_RECIPE)\n    const { data, loading } = useQuery(GET_SHOPPING_LIST, {\n        variables: { id },\n        onCompleted: ({getShoppingListById: { recipeId }}) => getRecipe({variables: { recipeId }})\n    });\n    const { data: ingredients } = useSubscription(INGREDIENTS_SUBSCRIPTION, {\n        variables: { userId: '5e03a6a91841d1fce86f9292' },\n    });\n\n    const shoppingList = data?.getShoppingListById;\n    // const [ ingredients, setIngredients ] =  React.useState<any>(shoppingList?.ingredients ?? [])\n    const recipe = recipeData?.recipeById;\n\n    return (\n        <section className=\"section\">\n            {loading && <div className=\"container has-text-centered\"><CircularProgress /></div>}\n            {\n                shoppingList &&\n                <>\n                    <h1 className=\"title has-text-centered\">{shoppingList.recipeTitle}</h1>\n                    <div className=\"columns is-two-thirds is-centered\">\n                        <MyIngredients\n                            userId={'5e03a6a91841d1fce86f9292'}\n                            ingredients={shoppingList.ingredients}\n                            listId={shoppingList.id}\n                        />\n                    </div>\n                    <div className=\"container\">\n                        {loadingRecipe && <div className=\"container has-text-centered\"><CircularProgress /></div>}\n                        {\n                            recipe &&\n                            <>\n                                <div className=\"columns is-one-quarter is-centered\">\n                                    <img src={recipe.image} alt={recipe.title}/>\n                                </div>\n                                <div className=\"container\">\n                                    {\n                                        recipe.analyzedInstructions\n                                            .reduce(flattenSteps, [])\n                                            .map(({step}: {step: string}, i: number) => (\n                                            <div key={i} className=\"box has-text-centered\">{step}</div>\n                                        ))\n                                    }\n                                </div>\n                            </>\n                        }\n                    </div>\n                </>\n            }\n        </section>\n    );\n}\n\nexport default ViewShoppingList;"]},"metadata":{},"sourceType":"module"}