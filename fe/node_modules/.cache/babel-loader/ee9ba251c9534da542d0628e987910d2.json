{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/stuff/recipes/fe/src/components/navbar/signup/SignUp.tsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SIGNUP } from './signup_query';\n\nfunction SignUp({\n  loadUser\n}) {\n  const [createUser, error] = useMutation(SIGNUP, {\n    onError: () => {},\n    onCompleted: loadUser\n  });\n  return React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      password: ''\n    },\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await createUser({\n        variables: values\n      });\n      setSubmitting(false);\n    },\n    validate: values => {\n      const required = ['name', 'password'];\n      const errors = Object.entries(values).filter(([key, val]) => required.some(r => r === key && val === '')).map(([key]) => [key, 'This field is required']);\n      return Object.fromEntries(errors);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, ({\n    isSubmitting\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"name\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"password\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/navbar/signup/SignUp.tsx"],"names":["React","Formik","Form","Field","ErrorMessage","useMutation","SIGNUP","SignUp","loadUser","createUser","error","onError","onCompleted","name","password","values","setSubmitting","variables","required","errors","Object","entries","filter","key","val","some","r","map","fromEntries","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA+C;AAC3C,QAAM,CAAEC,UAAF,EAAcC,KAAd,IAAwBL,WAAW,CAACC,MAAD,EAAS;AAC9CK,IAAAA,OAAO,EAAE,MAAM,CAAE,CAD6B;AAE9CC,IAAAA,WAAW,EAAEJ;AAFiC,GAAT,CAAzC;AAKA,SACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEK,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE;AAAtB,KADnB;AAEI,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAqC;AAC3C,YAAMP,UAAU,CAAC;AAAEQ,QAAAA,SAAS,EAAEF;AAAb,OAAD,CAAhB;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KALL;AAMI,IAAA,QAAQ,EAAGD,MAAD,IAAY;AAClB,YAAMG,QAAQ,GAAG,CAAC,MAAD,EAAS,UAAT,CAAjB;AACA,YAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAeN,MAAf,EACVO,MADU,CACH,CAAC,CAACC,GAAD,EAAMC,GAAN,CAAD,KAAgBN,QAAQ,CAACO,IAAT,CAAcC,CAAC,IAAIA,CAAC,KAAKH,GAAN,IAAaC,GAAG,KAAK,EAAxC,CADb,EAEVG,GAFU,CAEN,CAAC,CAACJ,GAAD,CAAD,KAAY,CAACA,GAAD,EAAM,wBAAN,CAFN,CAAf;AAGA,aAAOH,MAAM,CAACQ,WAAP,CAAmBT,MAAnB,CAAP;AACH,KAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcK,CAAC;AAACU,IAAAA;AAAD,GAAD,KACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CAfR,CADJ;AA4BH;;AAED,eAAetB,MAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { NavbarAuthProps } from '../navbar.model';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SIGNUP } from './signup_query';\n\nfunction SignUp({ loadUser }: NavbarAuthProps) {\n    const [ createUser, error ] = useMutation(SIGNUP, {\n        onError: () => {},\n        onCompleted: loadUser,\n    });\n\n    return (\n        <Formik\n            initialValues={{ name: '', password: ''}}\n            onSubmit={async (values, { setSubmitting }) => {\n                await createUser({ variables: values});\n                setSubmitting(false);\n            }}\n            validate={(values) => {\n                const required = ['name', 'password'];\n                const errors = Object.entries(values)\n                    .filter(([key, val]) => required.some(r => r === key && val === ''))\n                    .map(([key]) => ([key, 'This field is required']))\n                return Object.fromEntries(errors);\n            }}\n        >\n            {({isSubmitting}) => (\n                <Form>\n                    <Field name=\"name\" type=\"text\"></Field>\n                    <ErrorMessage name=\"name\" component=\"div\"></ErrorMessage>\n                    <Field name=\"password\" type=\"password\"></Field>\n                    <ErrorMessage name=\"password\" component=\"div\"></ErrorMessage>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        Submit\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    );\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}