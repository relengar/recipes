{"ast":null,"code":"import _objectSpread from\"/Users/dude/Documents/stuff/recipes/fe/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/dude/Documents/stuff/recipes/fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import RecipesByIngredient from'./recipes_by_ingredient/RecipesByIngredient';import'./RecipeSearch.css';import Autocomplete from'@material-ui/lab/Autocomplete';import TextField from'@material-ui/core/TextField';import{NavLink}from'react-router-dom';import{useFormik}from'formik';import{useQuery,useLazyQuery,useMutation}from'@apollo/react-hooks';import{GET_CACHED_INPUT,SET_CACHE,AUTOCOMPLETE,SEARCH}from'./queries';var DEFAULT_INGREDIENT_OPTIONS=['eggs','ham','milk'];function setOptions(loading,variables,data){if(loading){return[];}else if(data&&data.predictIngredient.length>0){return data.predictIngredient.map(function(_ref){var name=_ref.name;return name;});}if(variables){return variables.query.length>0?[]:DEFAULT_INGREDIENT_OPTIONS;}return DEFAULT_INGREDIENT_OPTIONS;}function RecipeSearch(){var _useQuery=useQuery(GET_CACHED_INPUT,{onCompleted:function onCompleted(cache){var _cache$ingredients;return(cache===null||cache===void 0?void 0:(_cache$ingredients=cache.ingredients)===null||_cache$ingredients===void 0?void 0:_cache$ingredients.length)>0&&search({variables:{ingredients:cache===null||cache===void 0?void 0:cache.ingredients}});}}),data=_useQuery.data;var _useLazyQuery=useLazyQuery(AUTOCOMPLETE),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),predict=_useLazyQuery2[0],_useLazyQuery2$=_useLazyQuery2[1],ingredients=_useLazyQuery2$.data,loading=_useLazyQuery2$.loading,variables=_useLazyQuery2$.variables;var _useLazyQuery3=useLazyQuery(SEARCH,{onCompleted:function onCompleted(){updateCache({variables:formik.values});}}),_useLazyQuery4=_slicedToArray(_useLazyQuery3,2),search=_useLazyQuery4[0],_useLazyQuery4$=_useLazyQuery4[1],loadingRecipes=_useLazyQuery4$.loading,recipes=_useLazyQuery4$.data,error=_useLazyQuery4$.error,called=_useLazyQuery4$.called;var _useMutation=useMutation(SET_CACHE),_useMutation2=_slicedToArray(_useMutation,1),updateCache=_useMutation2[0];var formik=useFormik({initialValues:{ingredients:data===null||data===void 0?void 0:data.ingredients},onSubmit:function onSubmit(values){search({variables:values});}});return React.createElement(\"section\",{className:\"section\"},React.createElement(\"div\",null,React.createElement(NavLink,{to:\"/\"},\"Home\")),React.createElement(\"h1\",{className:\"title has-text-centered\"},\"Search for recipes by Ingredients\"),React.createElement(\"div\",{className:\"columns is-centered\"},React.createElement(\"div\",{className:\"column is-one-quarter\"},React.createElement(\"form\",{onSubmit:formik.handleSubmit},React.createElement(\"div\",{className:\"\"},React.createElement(Autocomplete,{onChange:function onChange(_,value){return formik.setFieldValue('ingredients',value);},id:\"ingredient\",disableClearable:true,multiple:true,value:formik.values.ingredients?formik.values.ingredients:[],filterOptions:function filterOptions(options){return options.filter(function(option){return!formik.values.ingredients||!formik.values.ingredients.some(function(o){return o===option;});});},options:setOptions(loading,variables,ingredients),renderInput:function renderInput(params){return React.createElement(TextField,Object.assign({},params,{onChange:function onChange(_ref2){var target=_ref2.target;return predict({variables:{query:target.value}});},id:\"ingredients\",label:\"Ingredients\",margin:\"normal\",variant:\"outlined\",fullWidth:true,InputProps:_objectSpread({},params.InputProps,{type:'search'})}));},renderOption:function renderOption(option){return React.createElement(React.Fragment,null,React.createElement(\"div\",{id:\"ingredients\"},option));}})),React.createElement(\"p\",null,React.createElement(\"button\",{type:\"submit\",className:\"button\"},\"Search\"))))),React.createElement(RecipesByIngredient,{loading:loadingRecipes,data:recipes,error:error,called:called}));}export default RecipeSearch;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/recipe/recipe_search/RecipeSearch.tsx"],"names":["React","RecipesByIngredient","Autocomplete","TextField","NavLink","useFormik","useQuery","useLazyQuery","useMutation","GET_CACHED_INPUT","SET_CACHE","AUTOCOMPLETE","SEARCH","DEFAULT_INGREDIENT_OPTIONS","setOptions","loading","variables","data","predictIngredient","length","map","name","query","RecipeSearch","onCompleted","cache","ingredients","search","predict","updateCache","formik","values","loadingRecipes","recipes","error","called","initialValues","onSubmit","handleSubmit","_","value","setFieldValue","options","filter","option","some","o","params","target","InputProps","type"],"mappings":"iPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,6CAAhC,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,OAASC,QAAT,CAAmBC,YAAnB,CAAiCC,WAAjC,KAAoD,qBAApD,CACA,OAASC,gBAAT,CAA2BC,SAA3B,CAAsCC,YAAtC,CAAoDC,MAApD,KAAkE,WAAlE,CAEA,GAAMC,CAAAA,0BAA0B,CAAG,CAC/B,MAD+B,CAE/B,KAF+B,CAG/B,MAH+B,CAAnC,CAMA,QAASC,CAAAA,UAAT,CACIC,OADJ,CAEIC,SAFJ,CAGIC,IAHJ,CAIY,CACP,GAAIF,OAAJ,CAAa,CACV,MAAO,EAAP,CACH,CAFA,IAEM,IAAIE,IAAI,EAAIA,IAAI,CAACC,iBAAL,CAAuBC,MAAvB,CAAgC,CAA5C,CAA+C,CAClD,MAAOF,CAAAA,IAAI,CAACC,iBAAL,CAAuBE,GAAvB,CAA2B,kBAAEC,CAAAA,IAAF,MAAEA,IAAF,OAAYA,CAAAA,IAAZ,EAA3B,CAAP,CACH,CACD,GAAIL,SAAJ,CAAe,CACX,MAAOA,CAAAA,SAAS,CAACM,KAAV,CAAgBH,MAAhB,CAAyB,CAAzB,CAA6B,EAA7B,CAAiCN,0BAAxC,CACH,CACD,MAAOA,CAAAA,0BAAP,CACH,CAED,QAASU,CAAAA,YAAT,EAAwB,eACHjB,QAAQ,CAACG,gBAAD,CAAmB,CACxCe,WAAW,CAAE,qBAAAC,KAAK,+BAAI,CAAAA,KAAK,OAAL,EAAAA,KAAK,SAAL,4BAAAA,KAAK,CAAEC,WAAP,gEAAoBP,MAApB,EAA6B,CAA7B,EAAkCQ,MAAM,CAAC,CAACX,SAAS,CAAE,CAAEU,WAAW,CAAED,KAAF,SAAEA,KAAF,iBAAEA,KAAK,CAAEC,WAAtB,CAAZ,CAAD,CAA5C,EADsB,CAAnB,CADL,CACZT,IADY,WACZA,IADY,mBAI2CV,YAAY,CAACI,YAAD,CAJvD,gDAIZiB,OAJY,qDAIKF,WAJL,iBAIDT,IAJC,CAIkBF,OAJlB,iBAIkBA,OAJlB,CAI2BC,SAJ3B,iBAI2BA,SAJ3B,oBAK0DT,YAAY,CAACK,MAAD,CAAS,CAC/FY,WAAW,CAAE,sBAAM,CACfK,WAAW,CAAC,CAAEb,SAAS,CAAEc,MAAM,CAACC,MAApB,CAAD,CAAX,CACH,CAH8F,CAAT,CALtE,iDAKZJ,MALY,qDAKOK,cALP,iBAKFjB,OALE,CAK6BkB,OAL7B,iBAKuBhB,IALvB,CAKsCiB,KALtC,iBAKsCA,KALtC,CAK6CC,MAL7C,iBAK6CA,MAL7C,kBAUI3B,WAAW,CAACE,SAAD,CAVf,8CAUZmB,WAVY,kBAYpB,GAAMC,CAAAA,MAAM,CAAGzB,SAAS,CAAC,CACrB+B,aAAa,CAAE,CACbV,WAAW,CAAET,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAES,WADN,CADM,CAIrBW,QAAQ,CAAE,kBAAAN,MAAM,CAAI,CAChBJ,MAAM,CAAC,CAACX,SAAS,CAAEe,MAAZ,CAAD,CAAN,CACH,CANoB,CAAD,CAAxB,CASA,MACI,gCAAS,SAAS,CAAC,SAAnB,EACI,+BAAK,oBAAC,OAAD,EAAS,EAAE,CAAC,GAAZ,SAAL,CADJ,CAEI,0BAAI,SAAS,CAAC,yBAAd,sCAFJ,CAGI,2BAAK,SAAS,CAAC,qBAAf,EACI,2BAAK,SAAS,CAAC,uBAAf,EACI,4BAAM,QAAQ,CAAED,MAAM,CAACQ,YAAvB,EACI,2BAAK,SAAS,CAAC,EAAf,EACI,oBAAC,YAAD,EACI,QAAQ,CAAE,kBAACC,CAAD,CAAIC,KAAJ,QAAwBV,CAAAA,MAAM,CAACW,aAAP,CAAqB,aAArB,CAAoCD,KAApC,CAAxB,EADd,CAEI,EAAE,CAAC,YAFP,CAGI,gBAAgB,KAHpB,CAII,QAAQ,KAJZ,CAKI,KAAK,CAAEV,MAAM,CAACC,MAAP,CAAcL,WAAd,CAA4BI,MAAM,CAACC,MAAP,CAAcL,WAA1C,CAAwD,EALnE,CAMI,aAAa,CAAE,uBAAAgB,OAAO,QAAIA,CAAAA,OAAO,CAACC,MAAR,CAAe,SAAAC,MAAM,QAAI,CAACd,MAAM,CAACC,MAAP,CAAcL,WAAf,EAA8B,CAACI,MAAM,CAACC,MAAP,CAAcL,WAAd,CAA0BmB,IAA1B,CAA+B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKF,MAAV,EAAhC,CAAnC,EAArB,CAAJ,EAN1B,CAOI,OAAO,CAAE9B,UAAU,CAACC,OAAD,CAAUC,SAAV,CAAqBU,WAArB,CAPvB,CAQI,WAAW,CAAE,qBAAAqB,MAAM,QACf,qBAAC,SAAD,kBACQA,MADR,EAEI,QAAQ,CAAE,4BAAEC,CAAAA,MAAF,OAAEA,MAAF,OAAcpB,CAAAA,OAAO,CAAC,CAAEZ,SAAS,CAAE,CAAEM,KAAK,CAAE0B,MAAM,CAACR,KAAhB,CAAb,CAAD,CAArB,EAFd,CAGI,EAAE,CAAC,aAHP,CAII,KAAK,CAAC,aAJV,CAKI,MAAM,CAAC,QALX,CAMI,OAAO,CAAC,UANZ,CAOI,SAAS,KAPb,CAQI,UAAU,kBAAOO,MAAM,CAACE,UAAd,EAA0BC,IAAI,CAAE,QAAhC,EARd,GADe,EARvB,CAoBI,YAAY,CAAE,sBAACN,MAAD,QACV,qBAAC,KAAD,CAAO,QAAP,MACI,2BAAK,EAAE,CAAC,aAAR,EAAuBA,MAAvB,CADJ,CADU,EApBlB,EADJ,CADJ,CA6BI,6BACI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,QAAhC,WADJ,CA7BJ,CADJ,CADJ,CAHJ,CAwCI,oBAAC,mBAAD,EACI,OAAO,CAAEZ,cADb,CAEI,IAAI,CAAEC,OAFV,CAGI,KAAK,CAAEC,KAHX,CAII,MAAM,CAAEC,MAJZ,EAxCJ,CADJ,CAiDH,CAED,cAAeZ,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport RecipesByIngredient from './recipes_by_ingredient/RecipesByIngredient';\nimport './RecipeSearch.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { NavLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks';\nimport { GET_CACHED_INPUT, SET_CACHE, AUTOCOMPLETE, SEARCH } from './queries'\n\nconst DEFAULT_INGREDIENT_OPTIONS = [\n    'eggs',\n    'ham',\n    'milk',\n];\n\nfunction setOptions(\n    loading: boolean,\n    variables: { query: string },\n    data: { predictIngredient: { name: string }[] }\n): string[] {\n     if (loading) {\n        return [];\n    } else if (data && data.predictIngredient.length > 0) {\n        return data.predictIngredient.map(({name}) => name);\n    }\n    if (variables) {\n        return variables.query.length > 0 ? []: DEFAULT_INGREDIENT_OPTIONS;\n    }\n    return DEFAULT_INGREDIENT_OPTIONS;\n}\n\nfunction RecipeSearch() {\n    const { data } = useQuery(GET_CACHED_INPUT, {\n        onCompleted: cache => cache?.ingredients?.length > 0 && search({variables: { ingredients: cache?.ingredients }})\n    })\n    const [ predict, { data: ingredients, loading, variables } ] = useLazyQuery(AUTOCOMPLETE);\n    const [ search, { loading: loadingRecipes, data: recipes, error, called } ] = useLazyQuery(SEARCH, {\n        onCompleted: () => {\n            updateCache({ variables: formik.values});\n        }\n    });\n    const [ updateCache ] = useMutation(SET_CACHE);\n\n    const formik = useFormik({\n        initialValues: {\n          ingredients: data?.ingredients as string[],\n        },\n        onSubmit: values => {\n            search({variables: values})\n        },\n    });\n\n    return (\n        <section className=\"section\">\n            <div><NavLink to=\"/\">Home</NavLink></div>\n            <h1 className=\"title has-text-centered\">Search for recipes by Ingredients</h1>\n            <div className=\"columns is-centered\">\n                <div className=\"column is-one-quarter\">\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"\">\n                            <Autocomplete\n                                onChange={(_, value: string[]) => formik.setFieldValue('ingredients', value)}\n                                id=\"ingredient\"\n                                disableClearable\n                                multiple\n                                value={formik.values.ingredients ? formik.values.ingredients : []}\n                                filterOptions={options => options.filter(option => !formik.values.ingredients || !formik.values.ingredients.some(o => o === option))}\n                                options={setOptions(loading, variables, ingredients)}\n                                renderInput={params => (\n                                    <TextField\n                                        {...params}\n                                        onChange={({target}) => predict({ variables: { query: target.value } })}\n                                        id=\"ingredients\"\n                                        label=\"Ingredients\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\n                                    ></TextField>\n                                )}\n                                renderOption={(option: any) => (\n                                    <React.Fragment>\n                                        <div id=\"ingredients\">{option}</div>\n                                    </React.Fragment>\n                                )}\n                            />\n                        </div>\n                        <p>\n                            <button type=\"submit\" className=\"button\">Search</button>\n                        </p>\n                    </form>\n                </div>\n            </div>\n            <RecipesByIngredient\n                loading={loadingRecipes}\n                data={recipes}\n                error={error}\n                called={called}\n            />\n        </section>\n    )\n}\n\nexport default RecipeSearch;\n"]},"metadata":{},"sourceType":"module"}