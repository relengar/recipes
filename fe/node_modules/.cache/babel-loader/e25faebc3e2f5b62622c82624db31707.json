{"ast":null,"code":"import React from'react';import{useQuery}from'@apollo/react-hooks';import{useParams}from'react-router-dom';import CreateShoppingList from'../../shoppingList/create_shopping_list/CreateShoppingList';import{GET_RECIPE}from'./recipe_view.query';import{flattenSteps}from'../../util/helpers/flattenSteps';import{CircularProgress}from'@material-ui/core';function RecipeView(_ref){var history=_ref.history;var _useParams=useParams(),recipeId=_useParams.id;var _useQuery=useQuery(GET_RECIPE,{variables:{recipeId:parseInt(recipeId,10)}}),data=_useQuery.data,loading=_useQuery.loading;var _ref2=data?data:{recipeById:null},recipe=_ref2.recipeById;return React.createElement(\"section\",{className:\"section\"},loading&&React.createElement(\"div\",{className:\"has-text-centered\"},React.createElement(CircularProgress,null)),recipe&&React.createElement(React.Fragment,null,React.createElement(\"h1\",{className:\"title has-text-centered\"},recipe.title),React.createElement(\"div\",{className:\"columns is-centered\"},React.createElement(\"img\",{src:recipe.image,alt:recipe.title})),React.createElement(\"div\",{className:\"columns is-centered\"},React.createElement(CreateShoppingList,{recipeId:recipeId,recipeTitle:recipe.title,ingredients:recipe.extendedIngredients,submitted:function submitted(resp){return history.push('/search');}})),React.createElement(\"div\",{className:\"columns is-centered\"},React.createElement(\"ul\",null,recipe.extendedIngredients.map(function(_ref3){var id=_ref3.id,original=_ref3.original,amount=_ref3.amount,unit=_ref3.unit;return React.createElement(\"li\",{key:id},original,\" - \",parseFloat(amount.toPrecision(3)),\" \",unit);}))),React.createElement(\"div\",{className:\"container\"},recipe.analyzedInstructions.reduce(flattenSteps,[]).map(function(_ref4,i){var step=_ref4.step;return React.createElement(\"div\",{key:i,className:\"box has-text-centered\"},step);}))));}export default RecipeView;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/recipe/recipe_view/RecipeView.tsx"],"names":["React","useQuery","useParams","CreateShoppingList","GET_RECIPE","flattenSteps","CircularProgress","RecipeView","history","recipeId","id","variables","parseInt","data","loading","recipeById","recipe","title","image","extendedIngredients","resp","push","map","original","amount","unit","parseFloat","toPrecision","analyzedInstructions","reduce","i","step"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,4DAA/B,CAEA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,gBAAT,KAAiC,mBAAjC,CASA,QAASC,CAAAA,UAAT,MAAoD,IAA/BC,CAAAA,OAA+B,MAA/BA,OAA+B,gBACvBN,SAAS,EADc,CACpCO,QADoC,YACxCC,EADwC,eAErBT,QAAQ,CAACG,UAAD,CAAa,CAAEO,SAAS,CAAE,CAAEF,QAAQ,CAAEG,QAAQ,CAACH,QAAD,CAAqB,EAArB,CAApB,CAAb,CAAb,CAFa,CAExCI,IAFwC,WAExCA,IAFwC,CAEjCC,OAFiC,WAEjCA,OAFiC,WAGjBD,IAAI,CAAGA,IAAH,CAAU,CAAEE,UAAU,CAAE,IAAd,CAHG,CAG5BC,MAH4B,OAGxCD,UAHwC,CAKhD,MACI,gCAAS,SAAS,CAAC,SAAnB,EACKD,OAAO,EAAI,2BAAK,SAAS,CAAC,mBAAf,EAAmC,oBAAC,gBAAD,MAAnC,CADhB,CAGQE,MAAM,EACN,wCACI,0BAAI,SAAS,CAAC,yBAAd,EAAyCA,MAAM,CAACC,KAAhD,CADJ,CAEI,2BAAK,SAAS,CAAC,qBAAf,EACI,2BAAK,GAAG,CAAED,MAAM,CAACE,KAAjB,CAAwB,GAAG,CAAEF,MAAM,CAACC,KAApC,EADJ,CAFJ,CAKI,2BAAK,SAAS,CAAC,qBAAf,EACI,oBAAC,kBAAD,EACI,QAAQ,CAAER,QADd,CAEI,WAAW,CAAEO,MAAM,CAACC,KAFxB,CAGI,WAAW,CAAED,MAAM,CAACG,mBAHxB,CAII,SAAS,CAAE,mBAACC,IAAD,QAAeZ,CAAAA,OAAO,CAACa,IAAR,CAAa,SAAb,CAAf,EAJf,EADJ,CALJ,CAaI,2BAAK,SAAS,CAAC,qBAAf,EACI,8BACKL,MAAM,CAACG,mBAAP,CAA2BG,GAA3B,CAA+B,mBAAEZ,CAAAA,EAAF,OAAEA,EAAF,CAAMa,QAAN,OAAMA,QAAN,CAAgBC,MAAhB,OAAgBA,MAAhB,CAAwBC,IAAxB,OAAwBA,IAAxB,OAC5B,2BAAI,GAAG,CAAEf,EAAT,EAAca,QAAd,OAA2BG,UAAU,CAACF,MAAM,CAACG,WAAP,CAAmB,CAAnB,CAAD,CAArC,KAA+DF,IAA/D,CAD4B,EAA/B,CADL,CADJ,CAbJ,CAoBI,2BAAK,SAAS,CAAC,WAAf,EAEQT,MAAM,CAACY,oBAAP,CACKC,MADL,CACYxB,YADZ,CAC0B,EAD1B,EAEKiB,GAFL,CAES,eAAyBQ,CAAzB,KAAEC,CAAAA,IAAF,OAAEA,IAAF,OACL,4BAAK,GAAG,CAAED,CAAV,CAAa,SAAS,CAAC,uBAAvB,EAAgDC,IAAhD,CADK,EAFT,CAFR,CApBJ,CAJR,CADJ,CAsCH,CAED,cAAexB,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\nimport CreateShoppingList from '../../shoppingList/create_shopping_list/CreateShoppingList';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { GET_RECIPE } from './recipe_view.query';\nimport { flattenSteps } from '../../util/helpers/flattenSteps';\nimport { CircularProgress } from '@material-ui/core';\n\ninterface Ingredient {\n    id: number;\n    original: string\n    amount: number;\n    unit: string;\n}\n\nfunction RecipeView({history}: RouteComponentProps) {\n    const { id: recipeId } = useParams()\n    const { data , loading } = useQuery(GET_RECIPE, { variables: { recipeId: parseInt(recipeId as string, 10) } });\n    const { recipeById: recipe } = data ? data : { recipeById: null };\n\n    return (\n        <section className=\"section\">\n            {loading && <div className=\"has-text-centered\"><CircularProgress /></div>}\n            {\n                recipe &&\n                <>\n                    <h1 className=\"title has-text-centered\">{recipe.title}</h1>\n                    <div className=\"columns is-centered\">\n                        <img src={recipe.image} alt={recipe.title}/>\n                    </div>\n                    <div className=\"columns is-centered\">\n                        <CreateShoppingList\n                            recipeId={recipeId as string}\n                            recipeTitle={recipe.title}\n                            ingredients={recipe.extendedIngredients}\n                            submitted={(resp: any) => history.push('/search')}\n                        />\n                    </div>\n                    <div className=\"columns is-centered\">\n                        <ul>\n                            {recipe.extendedIngredients.map(({id, original, amount, unit}: Ingredient) => (\n                                <li key={id}>{original} - {parseFloat(amount.toPrecision(3))} {unit}</li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div className=\"container\">\n                        {\n                            recipe.analyzedInstructions\n                                .reduce(flattenSteps, [])\n                                .map(({step}: {step: string}, i: number) => (\n                                <div key={i} className=\"box has-text-centered\">{step}</div>\n                            ))\n                        }\n                    </div>\n                </>\n            }\n        </section>\n    );\n}\n\nexport default RecipeView;"]},"metadata":{},"sourceType":"module"}