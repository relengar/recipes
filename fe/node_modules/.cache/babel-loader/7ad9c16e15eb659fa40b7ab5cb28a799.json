{"ast":null,"code":"import _objectSpread from\"/Users/dude/Documents/stuff/recipes/fe/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/dude/Documents/stuff/recipes/fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{debounce}from'lodash';import{useMutation,useSubscription}from'@apollo/react-hooks';import{UPDATE_INGREDIENTS}from'./my_ingredients.query';import IngredientSlider from'./ingredientSlider/IngredientSlider';import{INGREDIENTS_SUBSCRIPTION}from'../view_shopping_list.query';function processIngredient(ingredient){var requiredFields=['amount','original','id','amountFill','unit'];return Object.fromEntries(Object.entries(ingredient).filter(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];return requiredFields.some(function(field){return field===key;});}));}function getVariables(amountFill,ingredient,userId,listId){return{variables:{userId:userId,id:listId,ingredients:[_objectSpread({},processIngredient(ingredient),{amountFill:amountFill})]}};}function mapIngredientUpdates(ingredients,updates){if(!(updates===null||updates===void 0?void 0:updates.length)){return ingredients;}var resp=ingredients.map(function(ingredient){var update=updates.find(function(_ref3){var id=_ref3.id;return id===ingredient.id;});return _objectSpread({},ingredient,{},update,{forceRender:update?new Date().getTime():0});});return resp;}function MyIngredients(_ref4){var ingredientsInput=_ref4.ingredients,listId=_ref4.listId,userId=_ref4.userId;var _useMutation=useMutation(UPDATE_INGREDIENTS),_useMutation2=_slicedToArray(_useMutation,1),updateIngredients=_useMutation2[0];var _update=debounce(updateIngredients,300);useSubscription(INGREDIENTS_SUBSCRIPTION,{variables:{userId:userId},onSubscriptionData:function onSubscriptionData(_ref5){var subscriptionData=_ref5.subscriptionData;setIngredeints(mapIngredientUpdates(ingredientsInput,subscriptionData.data.shoppingListIngredients));}});var _React$useState=React.useState(ingredientsInput),_React$useState2=_slicedToArray(_React$useState,2),ingredients=_React$useState2[0],setIngredeints=_React$useState2[1];return React.createElement(\"ul\",null,Array.from(ingredients).map(function(_ref6,i){var amount=_ref6.amount,amountFill=_ref6.amountFill,unit=_ref6.unit,original=_ref6.original,forceRender=_ref6.forceRender;return React.createElement(\"li\",{className:\"columns\",key:i+(forceRender!==null&&forceRender!==void 0?forceRender:0)},React.createElement(\"div\",{className:\"column\"},original,\": \",amountFill),React.createElement(\"div\",{className:\"column\"},React.createElement(IngredientSlider,{amount:amount,amountFill:amountFill,unit:unit,update:function update(v){return _update(getVariables(v,ingredients[i],userId,listId));}})),React.createElement(\"div\",{className:\"column\"},amountFill,\" \",unit));}));}export default MyIngredients;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/shoppingList/view_shopping_list/my_ingredients/MyIngredients.tsx"],"names":["React","debounce","useMutation","useSubscription","UPDATE_INGREDIENTS","IngredientSlider","INGREDIENTS_SUBSCRIPTION","processIngredient","ingredient","requiredFields","Object","fromEntries","entries","filter","key","some","field","getVariables","amountFill","userId","listId","variables","id","ingredients","mapIngredientUpdates","updates","length","resp","map","update","find","forceRender","Date","getTime","MyIngredients","ingredientsInput","updateIngredients","onSubscriptionData","subscriptionData","setIngredeints","data","shoppingListIngredients","useState","Array","from","i","amount","unit","original","v"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { debounce } from 'lodash'\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nimport { UPDATE_INGREDIENTS } from './my_ingredients.query';\nimport IngredientSlider from './ingredientSlider/IngredientSlider';\nimport { INGREDIENTS_SUBSCRIPTION } from '../view_shopping_list.query';\n\ninterface MyIngredientsProps {\n    ingredients: any[];\n    listId: string;\n    userId: string;\n}\n\nfunction processIngredient(ingredient: any) {\n    const requiredFields = ['amount', 'original', 'id', 'amountFill', 'unit'];\n    return Object.fromEntries(\n        Object.entries(ingredient)\n            .filter(([key]) => requiredFields.some(field => field === key))\n    );\n}\n\nfunction getVariables(amountFill: number, ingredient: any, userId: string, listId: string) {\n    return {\n        variables: {\n            userId,\n            id: listId,\n            ingredients: [{...processIngredient(ingredient), amountFill}],\n        }\n    }\n}\n\nfunction mapIngredientUpdates(ingredients: any[], updates: any[]) {\n    if (!updates?.length) {\n       return  ingredients;\n    }\n    const resp = ingredients.map(ingredient => {\n        const update = updates.find(({id}) => id === ingredient.id)\n        return {\n            ...ingredient,\n            ...update,\n            forceRender: update ? new Date().getTime() : 0,\n        };\n    })\n    return resp;\n}\n\nfunction MyIngredients({ ingredients: ingredientsInput, listId, userId }: MyIngredientsProps) {\n    const [ updateIngredients ] = useMutation(UPDATE_INGREDIENTS);\n    const update = debounce(updateIngredients, 300);\n\n    useSubscription(INGREDIENTS_SUBSCRIPTION, {\n        variables: { userId },\n        onSubscriptionData: ({ subscriptionData }: any) => {\n            setIngredeints(mapIngredientUpdates(ingredientsInput, subscriptionData.data.shoppingListIngredients))\n        }\n    });\n\n    const [ ingredients, setIngredeints ] = React.useState(ingredientsInput)\n\n    return (\n        <ul>\n            {Array.from(ingredients).map(({ amount, amountFill, unit, original, forceRender}: any, i: number) => (\n                <li className=\"columns\" key={i + (forceRender ?? 0)}>\n                    <div className=\"column\">{original}: {amountFill}</div>\n                    <div className=\"column\">\n                        <IngredientSlider\n                            amount={amount}\n                            amountFill={amountFill}\n                            unit={unit}\n                            update={v => update(getVariables(v as number, ingredients[i], userId, listId))}\n                        />\n                    </div>\n                    <div className=\"column\">{amountFill} {unit}</div>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default MyIngredients;"]},"metadata":{},"sourceType":"module"}