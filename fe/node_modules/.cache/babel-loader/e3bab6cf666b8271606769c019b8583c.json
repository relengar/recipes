{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/stuff/recipes/fe/src/components/navbar/login/LogIn.tsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from './login_query';\nimport { formatError } from '../../util/helpers/formatError';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogTitle } from '@material-ui/core/DialogTitle';\n\nfunction LogIn({\n  loadUser\n}) {\n  const [open, setOpen] = React.useState(false);\n  const [login, {\n    error\n  }] = useMutation(LOGIN, {\n    onError: () => {},\n    onCompleted: loadUser\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: () => setOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Log In\"), React.createElement(Dialog, {\n    open: open,\n    onClose: () => setOpen(false),\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Subscribe\"), React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      password: ''\n    },\n    onSubmit: values => login({\n      variables: values\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Login\"), error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, formatError(error))))));\n}\n\nexport default LogIn;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/navbar/login/LogIn.tsx"],"names":["React","Formik","Form","Field","ErrorMessage","useMutation","LOGIN","formatError","Dialog","DialogTitle","LogIn","loadUser","open","setOpen","useState","login","error","onError","onCompleted","name","password","values","variables"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAA4C;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAAEC,KAAF,EAAS;AAAEC,IAAAA;AAAF,GAAT,IAAuBX,WAAW,CAACC,KAAD,EAAQ;AAC5CW,IAAAA,OAAO,EAAE,MAAM,CAAE,CAD2B;AAE5CC,IAAAA,WAAW,EAAEP;AAF+B,GAAR,CAAxC;AAKA,SACI,0CACI;AAAQ,IAAA,OAAO,EAAE,MAAME,OAAO,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,IAAd;AAAoB,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA1C;AAAmD,uBAAgB,mBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAACM,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,QAAQ,EAAE;AAArB,KADnB;AAEI,IAAA,QAAQ,EAAGC,MAAD,IAAYN,KAAK,CAAC;AAACO,MAAAA,SAAS,EAAED;AAAZ,KAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,EAMKL,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,WAAW,CAACS,KAAD,CAAlB,CANd,CAJJ,CAFJ,CAJJ,CADJ;AAuBH;;AAED,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from './login_query';\nimport { NavbarAuthProps } from '../navbar.model';\nimport { formatError } from '../../util/helpers/formatError';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogTitle } from '@material-ui/core/DialogTitle';\n\nfunction LogIn({loadUser}: NavbarAuthProps) {\n    const [open, setOpen] = React.useState(false);\n    const [ login, { error } ] = useMutation(LOGIN, {\n        onError: () => {},\n        onCompleted: loadUser\n    });\n\n    return (\n        <>\n            <button onClick={() => setOpen(true)}>\n            Log In\n            </button>\n            <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                <Formik\n                    initialValues={{name: '', password: ''}}\n                    onSubmit={(values) => login({variables: values})}\n                >\n                    <Form>\n                        <Field name=\"name\"></Field>\n                        <ErrorMessage name=\"name\"></ErrorMessage>\n                        <Field type=\"password\" name=\"password\"></Field>\n                        <ErrorMessage name=\"password\"></ErrorMessage>\n                        <button>Login</button>\n                        {error && <span>{formatError(error)}</span>}\n                    </Form>\n                </Formik>\n            </Dialog>\n        </>\n    )\n}\n\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}