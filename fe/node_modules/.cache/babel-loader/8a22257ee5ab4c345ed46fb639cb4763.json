{"ast":null,"code":"import { WebSocketLink } from 'apollo-link-ws';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { getMainDefinition } from 'apollo-utilities';\nconst ssl = process.env.SSL_ENABLED ? 's' : '';\nconst uri = process.env.API_URL_DOMAIN ? `http${ssl}://${process.env.API_URL_DOMAIN}/graphql` : 'http://localhost:3000/graphql';\nconst wsUri = process.env.API_URL_DOMAIN ? `ws${ssl}://${process.env.API_URL_DOMAIN}/graphql` : 'ws://localhost:3000/graphql';\nconst wsLink = new WebSocketLink({\n  uri: wsUri,\n  options: {\n    reconnect: true\n  }\n});\nconst httpLink = new HttpLink({\n  uri,\n  credentials: 'include'\n});\nexport const link = split(({\n  query\n}) => {\n  const definition = getMainDefinition(query);\n  return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n}, wsLink, httpLink);","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/websocketSetup.ts"],"names":["WebSocketLink","split","HttpLink","getMainDefinition","ssl","process","env","SSL_ENABLED","uri","API_URL_DOMAIN","wsUri","wsLink","options","reconnect","httpLink","credentials","link","query","definition","kind","operation"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAZ,GAA0B,GAA1B,GAAgC,EAA5C;AACA,MAAMC,GAAG,GAAGH,OAAO,CAACC,GAAR,CAAYG,cAAZ,GAA8B,OAAML,GAAI,MAAKC,OAAO,CAACC,GAAR,CAAYG,cAAe,UAAxE,GAAoF,+BAAhG;AACA,MAAMC,KAAK,GAAGL,OAAO,CAACC,GAAR,CAAYG,cAAZ,GAA8B,KAAIL,GAAI,MAAKC,OAAO,CAACC,GAAR,CAAYG,cAAe,UAAtE,GAAkF,6BAAhG;AAGA,MAAME,MAAM,GAAG,IAAIX,aAAJ,CAAkB;AAC/BQ,EAAAA,GAAG,EAAEE,KAD0B;AAE/BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AAFsB,CAAlB,CAAf;AAOA,MAAMC,QAAQ,GAAG,IAAIZ,QAAJ,CAAa;AAC5BM,EAAAA,GAD4B;AAE5BO,EAAAA,WAAW,EAAE;AAFe,CAAb,CAAjB;AAKA,OAAO,MAAMC,IAAI,GAAGf,KAAK,CACrB,CAAC;AAAEgB,EAAAA;AAAF,CAAD,KAAe;AACX,QAAMC,UAAU,GAAGf,iBAAiB,CAACc,KAAD,CAApC;AACA,SACEC,UAAU,CAACC,IAAX,KAAoB,qBAApB,IACAD,UAAU,CAACE,SAAX,KAAyB,cAF3B;AAIH,CAPoB,EAQrBT,MARqB,EASrBG,QATqB,CAAlB","sourcesContent":["import { WebSocketLink } from 'apollo-link-ws';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { getMainDefinition } from 'apollo-utilities';\n\nconst ssl = process.env.SSL_ENABLED ? 's' : '';\nconst uri = process.env.API_URL_DOMAIN ? `http${ssl}://${process.env.API_URL_DOMAIN}/graphql` : 'http://localhost:3000/graphql';\nconst wsUri = process.env.API_URL_DOMAIN ? `ws${ssl}://${process.env.API_URL_DOMAIN}/graphql` : 'ws://localhost:3000/graphql';\n\n\nconst wsLink = new WebSocketLink({\n  uri: wsUri,\n  options: {\n    reconnect: true\n  }\n});\n\nconst httpLink = new HttpLink({\n  uri,\n  credentials: 'include',\n});\n\nexport const link = split(\n    ({ query }) => {\n        const definition = getMainDefinition(query);\n        return (\n          definition.kind === 'OperationDefinition' &&\n          definition.operation === 'subscription'\n        );\n    },\n    wsLink,\n    httpLink,\n);"]},"metadata":{},"sourceType":"module"}