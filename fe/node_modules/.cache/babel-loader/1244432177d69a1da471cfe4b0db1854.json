{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/dude/Documents/stuff/recipes/fe/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    query getCachedRecipes($ingredients: [String!]!) {\\n        recipesByIngredients(ingredients: $ingredients) \\n        {\\n            id\\n            title\\n            missedIngredients {original, id, amount, unit}\\n            usedIngredients {original, id, amount, unit}\\n        }\\n    }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    mutation SetCache(\\n        $ingredients: [String!] @client\\n    ) {\\n        saveIngredients(ingredients: $ingredients) @client\\n    }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    query Predict($query: String!) {\\n        predictIngredient(query: $query) {\\n            name\\n        }\\n    }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    {\\n        ingredients @client\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{gql}from'apollo-boost';export var GET_CACHED_INPUT=gql(_templateObject());export var AUTOCOMPLETE=gql(_templateObject2());export var SET_CACHE=gql(_templateObject3());export var SEARCH=gql(_templateObject4());","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/recipe/recipe_search/queries.ts"],"names":["gql","GET_CACHED_INPUT","AUTOCOMPLETE","SET_CACHE","SEARCH"],"mappings":"4wCAAA,OAASA,GAAT,KAAoB,cAApB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGD,GAAH,mBAAtB,CAMP,MAAO,IAAME,CAAAA,YAAY,CAAGF,GAAH,oBAAlB,CAQP,MAAO,IAAMG,CAAAA,SAAS,CAAGH,GAAH,oBAAf,CAQP,MAAO,IAAMI,CAAAA,MAAM,CAAGJ,GAAH,oBAAZ","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const GET_CACHED_INPUT = gql`\n    {\n        ingredients @client\n    }\n`\n\nexport const AUTOCOMPLETE = gql`\n    query Predict($query: String!) {\n        predictIngredient(query: $query) {\n            name\n        }\n    }\n`\n\nexport const SET_CACHE = gql`\n    mutation SetCache(\n        $ingredients: [String!] @client\n    ) {\n        saveIngredients(ingredients: $ingredients) @client\n    }\n`\n\nexport const SEARCH = gql`\n    query getCachedRecipes($ingredients: [String!]!) {\n        recipesByIngredients(ingredients: $ingredients) \n        {\n            id\n            title\n            missedIngredients {original, id, amount, unit}\n            usedIngredients {original, id, amount, unit}\n        }\n    }\n`\n"]},"metadata":{},"sourceType":"module"}