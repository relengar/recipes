{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/stuff/recipes/fe/src/components/recipe/recipe_view/RecipeView.tsx\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\nimport CreateShoppingList from '../../shoppingList/create_shopping_list/CreateShoppingList';\nimport { GET_RECIPE } from './recipe_view.query';\nimport { flattenSteps } from '../../util/helpers/flattenSteps';\nimport { CircularProgress } from '@material-ui/core';\n\nfunction RecipeView({\n  history\n}) {\n  const _useParams = useParams(),\n        recipeId = _useParams.id;\n\n  const _useQuery = useQuery(GET_RECIPE, {\n    variables: {\n      recipeId: parseInt(recipeId, 10)\n    }\n  }),\n        data = _useQuery.data,\n        loading = _useQuery.loading;\n\n  const _ref = data ? data : {\n    recipeById: null\n  },\n        recipe = _ref.recipeById;\n\n  return React.createElement(\"section\", {\n    className: \"section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, loading && React.createElement(\"div\", {\n    className: \"is-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), recipe && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"title has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, recipe.title), React.createElement(\"div\", {\n    className: \"columns is-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: recipe.image,\n    alt: recipe.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"columns is-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(CreateShoppingList, {\n    recipeId: recipeId,\n    recipeTitle: recipe.title,\n    userId: \"5e03a6a91841d1fce86f9292\",\n    ingredients: recipe.extendedIngredients,\n    submitted: resp => history.push('/search'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"columns is-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, recipe.extendedIngredients.map(({\n    id,\n    original,\n    amount,\n    unit\n  }) => React.createElement(\"li\", {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, original, \" - \", parseFloat(amount.toPrecision(3)), \" \", unit)))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, recipe.analyzedInstructions.reduce(flattenSteps, []).map(({\n    step\n  }, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"box has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, step)))));\n}\n\nexport default RecipeView;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/recipe/recipe_view/RecipeView.tsx"],"names":["React","useQuery","useParams","CreateShoppingList","GET_RECIPE","flattenSteps","CircularProgress","RecipeView","history","recipeId","id","variables","parseInt","data","loading","recipeById","recipe","title","image","extendedIngredients","resp","push","map","original","amount","unit","parseFloat","toPrecision","analyzedInstructions","reduce","step","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\nimport CreateShoppingList from '../../shoppingList/create_shopping_list/CreateShoppingList';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { GET_RECIPE } from './recipe_view.query';\nimport { flattenSteps } from '../../util/helpers/flattenSteps';\nimport { CircularProgress } from '@material-ui/core';\n\ninterface Ingredient {\n    id: number;\n    original: string\n    amount: number;\n    unit: string;\n}\n\nfunction RecipeView({history}: RouteComponentProps) {\n    const { id: recipeId } = useParams()\n    const { data , loading } = useQuery(GET_RECIPE, { variables: { recipeId: parseInt(recipeId as string, 10) } });\n    const { recipeById: recipe } = data ? data : { recipeById: null };\n\n    return (\n        <section className=\"section\">\n            {loading && <div className=\"is-centered\"><CircularProgress /></div>}\n            {\n                recipe &&\n                <>\n                    <h1 className=\"title has-text-centered\">{recipe.title}</h1>\n                    <div className=\"columns is-centered\">\n                        <img src={recipe.image} alt={recipe.title}/>\n                    </div>\n                    <div className=\"columns is-centered\">\n                        <CreateShoppingList\n                            recipeId={recipeId as string}\n                            recipeTitle={recipe.title}\n                            userId='5e03a6a91841d1fce86f9292'\n                            ingredients={recipe.extendedIngredients}\n                            submitted={(resp: any) => history.push('/search')}\n                        />\n                    </div>\n                    <div className=\"columns is-centered\">\n                        <ul>\n                            {recipe.extendedIngredients.map(({id, original, amount, unit}: Ingredient) => (\n                                <li key={id}>{original} - {parseFloat(amount.toPrecision(3))} {unit}</li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div className=\"container\">\n                        {\n                            recipe.analyzedInstructions\n                                .reduce(flattenSteps, [])\n                                .map(({step}: {step: string}, i: number) => (\n                                <div key={i} className=\"box has-text-centered\">{step}</div>\n                            ))\n                        }\n                    </div>\n                </>\n            }\n        </section>\n    );\n}\n\nexport default RecipeView;"]},"metadata":{},"sourceType":"module"}