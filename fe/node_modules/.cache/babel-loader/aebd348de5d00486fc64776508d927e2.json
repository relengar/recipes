{"ast":null,"code":"var _jsxFileName = \"/Users/dude/Documents/stuff/recipes/fe/src/components/shoppingList/create_shopping_list/CreateShoppingList.tsx\";\nimport React from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { GET_MY_SHOPPING_LISTS } from '../my_shopping_lists/my-shopping-list.queries';\nimport { CREATE_SHOPPING_LIST } from './create_shopping_list.query';\nimport { CURRENT_USER } from '../../navbar/authModule/auth_module_query';\n\nfunction processInput(object) {\n  return Object.fromEntries(Object.entries(object).filter(([key]) => key !== '__typename'));\n}\n\nfunction CreateShoppingList({\n  recipeId,\n  recipeTitle,\n  ingredients,\n  submitted\n}) {\n  var _user$currentUser;\n\n  const {\n    data: user\n  } = useQuery(CURRENT_USER);\n  const userId = user === null || user === void 0 ? void 0 : (_user$currentUser = user.currentUser) === null || _user$currentUser === void 0 ? void 0 : _user$currentUser.id;\n  const [createList] = useMutation(CREATE_SHOPPING_LIST, {\n    refetchQueries: [{\n      query: GET_MY_SHOPPING_LISTS,\n      variables: {\n        userId\n      }\n    }]\n  });\n  return userId && React.createElement(\"button\", {\n    onClick: async () => {\n      return await createList({\n        variables: {\n          recipeTitle,\n          recipeId: parseInt(recipeId, 10),\n          ingredients: ingredients.map(processInput),\n          userId\n        }\n      }).then(id => submitted(id)).catch(err => console.log(err));\n    },\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Create shopping list\");\n}\n\nexport default CreateShoppingList;","map":{"version":3,"sources":["/Users/dude/Documents/stuff/recipes/fe/src/components/shoppingList/create_shopping_list/CreateShoppingList.tsx"],"names":["React","useMutation","useQuery","GET_MY_SHOPPING_LISTS","CREATE_SHOPPING_LIST","CURRENT_USER","processInput","object","Object","fromEntries","entries","filter","key","CreateShoppingList","recipeId","recipeTitle","ingredients","submitted","data","user","userId","currentUser","id","createList","refetchQueries","query","variables","parseInt","map","then","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,SAASC,qBAAT,QAAsC,+CAAtC;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,YAAT,QAA6B,2CAA7B;;AAkBA,SAASC,YAAT,CAAyBC,MAAzB,EAAgD;AAC5C,SAAOC,MAAM,CAACC,WAAP,CAAmBD,MAAM,CAACE,OAAP,CAAeH,MAAf,EAAuBI,MAAvB,CAA8B,CAAC,CAACC,GAAD,CAAD,KAAWA,GAAG,KAAK,YAAjD,CAAnB,CAAP;AACH;;AAED,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,WAAzB;AAAsCC,EAAAA;AAAtC,CAA5B,EAAqG;AAAA;;AACjG,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiBjB,QAAQ,CAACG,YAAD,CAA/B;AACA,QAAMe,MAAM,GAAGD,IAAH,aAAGA,IAAH,4CAAGA,IAAI,CAAEE,WAAT,sDAAG,kBAAmBC,EAAlC;AACA,QAAM,CAAEC,UAAF,IAAiBtB,WAAW,CAACG,oBAAD,EAAuB;AACrDoB,IAAAA,cAAc,EAAE,CAAC;AACbC,MAAAA,KAAK,EAAEtB,qBADM;AAEbuB,MAAAA,SAAS,EAAE;AAAEN,QAAAA;AAAF;AAFE,KAAD;AADqC,GAAvB,CAAlC;AAQA,SAAOA,MAAM,IACT;AACQ,IAAA,OAAO,EAAE,YAAW;AAChB,aAAO,MAAMG,UAAU,CAAC;AAACG,QAAAA,SAAS,EAAE;AAAEX,UAAAA,WAAF;AAAeD,UAAAA,QAAQ,EAAEa,QAAQ,CAACb,QAAD,EAAW,EAAX,CAAjC;AAAiDE,UAAAA,WAAW,EAAEA,WAAW,CAACY,GAAZ,CAAgBtB,YAAhB,CAA9D;AAA6Fc,UAAAA;AAA7F;AAAZ,OAAD,CAAV,CACRS,IADQ,CACFP,EAAD,IAAQL,SAAS,CAACK,EAAD,CADd,EAERQ,KAFQ,CAEFC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFL,CAAb;AAGH,KALT;AAMQ,IAAA,SAAS,EAAC,QANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ;AAYH;;AAED,eAAelB,kBAAf","sourcesContent":["import React from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { GET_MY_SHOPPING_LISTS } from '../my_shopping_lists/my-shopping-list.queries';\nimport { CREATE_SHOPPING_LIST } from './create_shopping_list.query';\nimport { CURRENT_USER } from '../../navbar/authModule/auth_module_query';\n\ninterface NewShoppingListProps {\n    recipeId: string;\n    recipeTitle: string;\n    ingredients: ShoppingListIngredient[];\n    submitted: Function;\n}\n\ninterface ShoppingListIngredient {\n    id: number;\n    name: string;\n    original: string;\n    originalName: string;\n    amount: number;\n    unit: string;\n}\n\nfunction processInput<T>(object: T): Partial<T> {\n    return Object.fromEntries(Object.entries(object).filter(([key]) => key !== '__typename'));\n}\n\nfunction CreateShoppingList({ recipeId, recipeTitle, ingredients, submitted }: NewShoppingListProps) {\n    const { data: user } = useQuery(CURRENT_USER);\n    const userId = user?.currentUser?.id\n    const [ createList ] = useMutation(CREATE_SHOPPING_LIST, {\n        refetchQueries: [{\n            query: GET_MY_SHOPPING_LISTS,\n            variables: { userId },\n        }]\n    });\n\n\n    return userId && (\n        <button\n                onClick={async() => {\n                    return await createList({variables: { recipeTitle, recipeId: parseInt(recipeId, 10), ingredients: ingredients.map(processInput), userId }})\n                        .then((id) => submitted(id))\n                        .catch(err => console.log(err))\n                }}\n                className=\"button\"\n            >\n            Create shopping list\n        </button>\n    )\n}\n\nexport default CreateShoppingList"]},"metadata":{},"sourceType":"module"}